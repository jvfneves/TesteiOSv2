//
//  LocationViewController.swift
//  TesteiOSv2-VitorNeves
//
//  Created by joao.vitor.f.naves on 04/03/2019.
//  Copyright (c) 2019 joao.vitor.f.naves. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LocationDisplayLogic: class
{
    func validateLogin() -> Bool
    func validLogin(_ userAccount: Location.UserAccount)
    func displayError(_ error: Location.Error)
}

class LocationViewController: UIViewController, LocationDisplayLogic
{
    var interactor: LocationBusinessLogic?
    var router: (NSObjectProtocol & LocationRoutingLogic & LocationDataPassing)?
    
    // MARK: - Object lifecycle
  
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: - Setup

    private func setup()
    {
        let viewController = self
        let interactor = LocationInteractor()
        let presenter = LocationPresenter()
        let router = LocationRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: - View lifecycle

    override func viewDidLoad()
    {
        super.viewDidLoad()
        self.userField.becomeFirstResponder()
    }

    // MARK: - Do something

    @IBOutlet weak var userField: UITextField!
    @IBOutlet weak var passwordField: UITextField!

    func validLogin(_ userAccount: Location.UserAccount){
        self.dismissHUD()
        router?.goToCurrency(userAccount: userAccount)
    }
    
    func displayError(_ error: Location.Error){
        self.dismissHUD()
        self.showAlert(title: "Bank", message: error.message)
    }
    
    func validateLogin() -> Bool{
        let user = self.userField.text!
        let password = self.passwordField.text!
        
        if user.isNumeric {
            if !user.isValidCPF(){
                self.showAlert(title: "Bank", message: "CPF informado é inválido.")
                return false
            }
            
        } else if !user.isValidEmail() {
            self.showAlert(title: "Bank", message: "Usuário informado é inválido.")
            return false
        }
        
        if !password.isValidPassword() {
            self.showAlert(title: "Bank", message: "Senha informada é inválida.")
            return false
        }
        
        return true
    }

    // MARK: - Actions

    @IBAction func loginAction(_ sender: UIButton) {
        if validateLogin() {
            self.showHUD()
            let request = Location.Login.Request(user: self.userField.text!, password: self.passwordField.text!)
            interactor?.login(request)
        }
    }
    
}
